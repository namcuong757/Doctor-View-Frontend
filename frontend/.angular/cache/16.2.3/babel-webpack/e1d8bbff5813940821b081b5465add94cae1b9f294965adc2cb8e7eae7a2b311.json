{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport * as $ from 'jquery';\nimport { Appointment } from 'src/app/model/appointment';\nimport { Account } from 'src/app/model/account';\nlet AppointmentComponent = class AppointmentComponent {\n  constructor(calendar, accountService, appointmentService) {\n    this.calendar = calendar;\n    this.accountService = accountService;\n    this.appointmentService = appointmentService;\n    this.currentStep = 0;\n    this.appointment = new Appointment();\n    this.choosenDocAccount = new Account();\n    this.currentUser = new Account();\n    this.doctorsByDepartment = {\n      \"1\": [\"John Smith\", \"Marry Jane\"],\n      \"2\": [\"Wonderland Alice\", \"Curl Bob\"],\n      \"3\": [\"Nam Tran\", \"Nam Cuong\"],\n      \"4\": [\"Thuan Nguyen\", \"Tran Hai\"],\n      \"5\": [\"Hue Pham\", \"Nguyen Tran\"],\n      \"6\": [\"John Nguyen\", \"John Wick\"],\n      \"7\": [\"Hung Tran\", \"Cao Bang\"],\n      \"8\": [\"Huyen Xi\", \"Quyen Nguyen\"]\n    };\n  }\n  ngOnInit() {\n    $(\"#selectedDepartmentId\").change(() => {\n      let departmentId = $(\"#selectedDepartmentId\").val(); // Get the selected department ID\n      let doctors = this.doctorsByDepartment[departmentId] || []; // Fetch doctors or default to empty array\n      let doctorsDropdown = $(\"#selectedDoctorId\");\n      doctorsDropdown.empty(); // Clear previous options\n      for (let doctor of doctors) {\n        doctorsDropdown.append(new Option(doctor, doctor)); // Append each doctor as an option\n      }\n    });\n\n    $(\"#selectedDoctorId\").change(() => {\n      let selectedDoctor = $(\"#selectedDoctorId\").val(); // Get the selected doctor\n      console.log(\"Selected Doctor: \", selectedDoctor); // Now you know which doctor was selected.\n      this.accountService.getAccountByName(selectedDoctor).subscribe(data => {\n        this.choosenDocAccount = data;\n      });\n    });\n  }\n  setCurrentStep(newStep) {\n    this.currentStep = newStep;\n  }\n  createAppoinment() {\n    this.currentUser = this.calendar.getCurrentUser();\n    this.appointment.doctor_id = this.choosenDocAccount.id;\n    this.appointment.doctor_name = this.choosenDocAccount.name;\n    this.appointment.person_id = this.currentUser.id;\n    this.appointment.person_name = this.currentUser.name;\n    this.appointment.fee = 50;\n    this.appointment.date = this.calendar.getChoosenDate();\n    this.appointment.time = this.calendar.getChoosenTime();\n    this.appointmentService.createAppointment(this.appointment);\n  }\n};\nAppointmentComponent = __decorate([Component({\n  selector: 'app-appointment',\n  templateUrl: './appointment.component.html',\n  styleUrls: ['./appointment.component.css']\n})], AppointmentComponent);\nexport { AppointmentComponent };","map":{"version":3,"names":["Component","$","Appointment","Account","AppointmentComponent","constructor","calendar","accountService","appointmentService","currentStep","appointment","choosenDocAccount","currentUser","doctorsByDepartment","ngOnInit","change","departmentId","val","doctors","doctorsDropdown","empty","doctor","append","Option","selectedDoctor","console","log","getAccountByName","subscribe","data","setCurrentStep","newStep","createAppoinment","getCurrentUser","doctor_id","id","doctor_name","name","person_id","person_name","fee","date","getChoosenDate","time","getChoosenTime","createAppointment","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/namcuong757/eclipse-workspace/HeathCare1/Doctor-View-Frontend/frontend/src/app/view/appointment/appointment.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport * as $ from 'jquery';\nimport { CalendarService } from 'src/app/service/calendar.service';\nimport { Appointment } from 'src/app/model/appointment';\nimport { Account } from 'src/app/model/account';\nimport { AccountService } from 'src/app/service/account-service';\nimport { AppointmentService } from 'src/app/service/appointment.service';\n\ninterface DepartmentDoctors {\n  [key: string]: string[];\n}\n@Component({\n  selector: 'app-appointment',\n  templateUrl: './appointment.component.html',\n  styleUrls: ['./appointment.component.css']\n})\n\nexport class AppointmentComponent {\n  constructor(public calendar : CalendarService, private accountService : AccountService, private appointmentService : AppointmentService){}\n  private currentStep : number = 0;\n  appointment : Appointment = new Appointment;\n  private choosenDocAccount : Account = new Account;\n  private currentUser : Account = new Account;\n  doctorsByDepartment: DepartmentDoctors = {\n    \"1\": [\"John Smith\", \"Marry Jane\"],\n    \"2\": [\"Wonderland Alice\", \"Curl Bob\"],\n    \"3\": [\"Nam Tran\", \"Nam Cuong\"],\n    \"4\": [\"Thuan Nguyen\", \"Tran Hai\"],\n    \"5\": [\"Hue Pham\", \"Nguyen Tran\"],\n    \"6\": [\"John Nguyen\", \"John Wick\"],\n    \"7\": [\"Hung Tran\", \"Cao Bang\"],\n    \"8\": [\"Huyen Xi\", \"Quyen Nguyen\"],\n  };\n  ngOnInit(){\n    $(\"#selectedDepartmentId\").change(() => {\n      let departmentId = $(\"#selectedDepartmentId\").val() as string; // Get the selected department ID\n      let doctors = this.doctorsByDepartment[departmentId] || []; // Fetch doctors or default to empty array\n      \n      let doctorsDropdown = $(\"#selectedDoctorId\");\n      doctorsDropdown.empty(); // Clear previous options\n\n      for(let doctor of doctors) {\n          doctorsDropdown.append(new Option(doctor, doctor)); // Append each doctor as an option\n      }\n  });\n    $(\"#selectedDoctorId\").change(() => {\n      let selectedDoctor = $(\"#selectedDoctorId\").val() as string; // Get the selected doctor\n      console.log(\"Selected Doctor: \", selectedDoctor); // Now you know which doctor was selected.\n      this.accountService.getAccountByName(selectedDoctor).subscribe(data=>{\n        this.choosenDocAccount = data;\n      })\n    });\n  }\n  setCurrentStep(newStep : number)\n  {\n    this.currentStep = newStep;\n  }\n  createAppoinment()\n  {\n    this.currentUser = this.calendar.getCurrentUser();\n    this.appointment.doctor_id = this.choosenDocAccount.id;\n    this.appointment.doctor_name = this .choosenDocAccount.name;\n    this.appointment.person_id = this.currentUser.id;\n    this.appointment.person_name = this.currentUser.name;\n    this.appointment.fee = 50;\n    this.appointment.date = this.calendar.getChoosenDate();\n    this.appointment.time = this.calendar.getChoosenTime();\n\n    this.appointmentService.createAppointment(this.appointment);\n  }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}