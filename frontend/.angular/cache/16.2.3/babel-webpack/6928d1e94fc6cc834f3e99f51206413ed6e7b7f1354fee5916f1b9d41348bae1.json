{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport * as $ from 'jquery';\nlet AppointmentComponent = class AppointmentComponent {\n  constructor(calendar) {\n    this.calendar = calendar;\n    this.currentStep = 0;\n    this.doctorsByDepartment = {\n      \"1\": [\"Dr. Smith (ED)\", \"Dr. Jane (ED)\"],\n      \"2\": [\"Dr. Alice (Pediatrics)\", \"Dr. Bob (Pediatrics)\"],\n      \"3\": [\"Dr. Tran (Cardiologics)\", \"Dr. Nam (Cardiologics)\"],\n      \"4\": [\"Dr. Thuan (Orthopedics)\", \"Dr. Hai (Orthopedics)\"],\n      \"5\": [\"Dr. Hue (OB/GYN)\", \"Dr. Nguyen (OB/GYN)\"],\n      \"6\": [\"Dr. John (Neurologics)\", \"Dr. Wick (Neurologics)\"],\n      \"7\": [\"Dr. Hung (Oncologic)\", \"Dr. Cao (Oncologic)\"],\n      \"8\": [\"Dr. Huyen (GM)\", \"Dr. Quyen (GM)\"]\n    };\n  }\n  ngOnInit() {\n    $(\"#selectedDepartmentId\").change(() => {\n      let departmentId = $(\"#selectedDepartmentId\").val(); // Get the selected department ID\n      let doctors = this.doctorsByDepartment[departmentId] || []; // Fetch doctors or default to empty array\n      let doctorsDropdown = $(\"#selectedDoctorId\");\n      doctorsDropdown.empty(); // Clear previous options\n      for (let doctor of doctors) {\n        doctorsDropdown.append(new Option(doctor, doctor)); // Append each doctor as an option\n      }\n    });\n  }\n\n  setCurrentStep(newStep) {\n    this.currentStep = newStep;\n  }\n};\nAppointmentComponent = __decorate([Component({\n  selector: 'app-appointment',\n  templateUrl: './appointment.component.html',\n  styleUrls: ['./appointment.component.css']\n})], AppointmentComponent);\nexport { AppointmentComponent };","map":{"version":3,"names":["Component","$","AppointmentComponent","constructor","calendar","currentStep","doctorsByDepartment","ngOnInit","change","departmentId","val","doctors","doctorsDropdown","empty","doctor","append","Option","setCurrentStep","newStep","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/namcuong757/eclipse-workspace/HeathCare1/Doctor-View-Frontend/frontend/src/app/view/appointment/appointment.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport * as $ from 'jquery';\nimport { CalendarService } from 'src/app/service/calendar.service';\ninterface DepartmentDoctors {\n  [key: string]: string[];\n}\n@Component({\n  selector: 'app-appointment',\n  templateUrl: './appointment.component.html',\n  styleUrls: ['./appointment.component.css']\n})\n\nexport class AppointmentComponent {\n  constructor(public calendar : CalendarService){}\n  private currentStep : number = 0;\n  doctorsByDepartment: DepartmentDoctors = {\n    \"1\": [\"Dr. Smith (ED)\", \"Dr. Jane (ED)\"],\n    \"2\": [\"Dr. Alice (Pediatrics)\", \"Dr. Bob (Pediatrics)\"],\n    \"3\": [\"Dr. Tran (Cardiologics)\", \"Dr. Nam (Cardiologics)\"],\n    \"4\": [\"Dr. Thuan (Orthopedics)\", \"Dr. Hai (Orthopedics)\"],\n    \"5\": [\"Dr. Hue (OB/GYN)\", \"Dr. Nguyen (OB/GYN)\"],\n    \"6\": [\"Dr. John (Neurologics)\", \"Dr. Wick (Neurologics)\"],\n    \"7\": [\"Dr. Hung (Oncologic)\", \"Dr. Cao (Oncologic)\"],\n    \"8\": [\"Dr. Huyen (GM)\", \"Dr. Quyen (GM)\"],\n  };\n  ngOnInit(){\n    $(\"#selectedDepartmentId\").change(() => {\n      let departmentId = $(\"#selectedDepartmentId\").val() as string; // Get the selected department ID\n      let doctors = this.doctorsByDepartment[departmentId] || []; // Fetch doctors or default to empty array\n      \n      let doctorsDropdown = $(\"#selectedDoctorId\");\n      doctorsDropdown.empty(); // Clear previous options\n\n      for(let doctor of doctors) {\n          doctorsDropdown.append(new Option(doctor, doctor)); // Append each doctor as an option\n      }\n  });\n  }\n  setCurrentStep(newStep : number)\n  {\n    this.currentStep = newStep;\n  }\n}\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,OAAO,KAAKC,CAAC,MAAM,QAAQ;AAWpB,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAC/BC,YAAmBC,QAA0B;IAA1B,KAAAA,QAAQ,GAARA,QAAQ;IACnB,KAAAC,WAAW,GAAY,CAAC;IAChC,KAAAC,mBAAmB,GAAsB;MACvC,GAAG,EAAE,CAAC,gBAAgB,EAAE,eAAe,CAAC;MACxC,GAAG,EAAE,CAAC,wBAAwB,EAAE,sBAAsB,CAAC;MACvD,GAAG,EAAE,CAAC,yBAAyB,EAAE,wBAAwB,CAAC;MAC1D,GAAG,EAAE,CAAC,yBAAyB,EAAE,uBAAuB,CAAC;MACzD,GAAG,EAAE,CAAC,kBAAkB,EAAE,qBAAqB,CAAC;MAChD,GAAG,EAAE,CAAC,wBAAwB,EAAE,wBAAwB,CAAC;MACzD,GAAG,EAAE,CAAC,sBAAsB,EAAE,qBAAqB,CAAC;MACpD,GAAG,EAAE,CAAC,gBAAgB,EAAE,gBAAgB;KACzC;EAX8C;EAY/CC,QAAQA,CAAA;IACNN,CAAC,CAAC,uBAAuB,CAAC,CAACO,MAAM,CAAC,MAAK;MACrC,IAAIC,YAAY,GAAGR,CAAC,CAAC,uBAAuB,CAAC,CAACS,GAAG,EAAY,CAAC,CAAC;MAC/D,IAAIC,OAAO,GAAG,IAAI,CAACL,mBAAmB,CAACG,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC;MAE5D,IAAIG,eAAe,GAAGX,CAAC,CAAC,mBAAmB,CAAC;MAC5CW,eAAe,CAACC,KAAK,EAAE,CAAC,CAAC;MAEzB,KAAI,IAAIC,MAAM,IAAIH,OAAO,EAAE;QACvBC,eAAe,CAACG,MAAM,CAAC,IAAIC,MAAM,CAACF,MAAM,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;;IAE5D,CAAC,CAAC;EACF;;EACAG,cAAcA,CAACC,OAAgB;IAE7B,IAAI,CAACb,WAAW,GAAGa,OAAO;EAC5B;CACD;AA9BYhB,oBAAoB,GAAAiB,UAAA,EANhCnB,SAAS,CAAC;EACToB,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,C,EAEWpB,oBAAoB,CA8BhC;SA9BYA,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}