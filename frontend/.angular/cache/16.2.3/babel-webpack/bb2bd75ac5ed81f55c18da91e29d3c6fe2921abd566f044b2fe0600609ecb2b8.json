{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AppointmentService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseURL = \"http://localhost:8080/api/v1/appointments\";\n  }\n  createAppointment(appointment) {\n    return this.httpClient.post(`${this.baseURL}`, appointment);\n  }\n  getAllAppointments() {\n    return this.httpClient.get(`${this.baseURL}`);\n  }\n  getAllAppointmentsByDate(date) {\n    return this.httpClient.get(`${this.baseURL}/${date}`);\n  }\n  getAppointmentsById(id) {\n    return this.httpClient.get(`${this.baseURL}/${id}`);\n  }\n  updateAppointment(id, appointment) {\n    return this.httpClient.put(`${this.baseURL}/${id}`, appointment);\n  }\n  deleteAppointment(id) {\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n  getAppointmentsByDoctorIDAndDate(doctor_id, date) {\n    console.log(this.baseURL + '/doctor/date/' + doctor_id + \"/\" + date);\n    return this.httpClient.get(this.baseURL + 'doctor/date/' + doctor_id + \"/\" + date);\n  }\n  getAllAppointmentByPersonId(person_id) {\n    return this.httpClient.get(this.baseURL + '/personal/' + person_id);\n  }\n}\n_class = AppointmentService;\n_class.ɵfac = function AppointmentService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AppointmentService","constructor","httpClient","baseURL","createAppointment","appointment","post","getAllAppointments","get","getAllAppointmentsByDate","date","getAppointmentsById","id","updateAppointment","put","deleteAppointment","delete","getAppointmentsByDoctorIDAndDate","doctor_id","console","log","getAllAppointmentByPersonId","person_id","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/namcuong757/eclipse-workspace/HeathCare1/Doctor-View-Frontend/frontend/src/app/service/appointment.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport { Appointment } from '../model/appointment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppointmentService {\n  private baseURL = \"http://localhost:8080/api/v1/appointments\";\n  constructor(private httpClient : HttpClient) {}\n  createAppointment(appointment : Appointment):Observable<Appointment>\n  {\n    return this.httpClient.post<any>(`${this.baseURL}`, appointment);\n  }\n  getAllAppointments():Observable<Appointment[]>\n  {\n    return this.httpClient.get<Appointment[]>(`${this.baseURL}`);\n  }\n  getAllAppointmentsByDate(date : string):Observable<Appointment[]>\n  {\n    return this.httpClient.get<Appointment[]>(`${this.baseURL}/${date}`);\n  }\n  getAppointmentsById(id : number):Observable<Appointment>\n  {\n    return this.httpClient.get<Appointment>(`${this.baseURL}/${id}`);\n  }\n  updateAppointment(id : number, appointment : Appointment): Observable<Object>\n  {\n    return this.httpClient.put<Appointment>(`${this.baseURL}/${id}`, appointment);\n  }\n  deleteAppointment(id : number) : Observable<Object>\n  {\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n  getAppointmentsByDoctorIDAndDate(doctor_id:number,date:number):Observable<Appointment []>\n  {\n    console.log(this.baseURL + '/doctor/date/' + doctor_id + \"/\" + date);\n    return this.httpClient.get<Appointment[]>(this.baseURL + 'doctor/date/' + doctor_id + \"/\" + date);\n  }\n  getAllAppointmentByPersonId(person_id : number):Observable<Appointment []>\n  {\n    return this.httpClient.get<Appointment[]>(this.baseURL + '/personal/' + person_id);\n  }\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAoBC,UAAuB;IAAvB,KAAAA,UAAU,GAAVA,UAAU;IADtB,KAAAC,OAAO,GAAG,2CAA2C;EACf;EAC9CC,iBAAiBA,CAACC,WAAyB;IAEzC,OAAO,IAAI,CAACH,UAAU,CAACI,IAAI,CAAM,GAAG,IAAI,CAACH,OAAO,EAAE,EAAEE,WAAW,CAAC;EAClE;EACAE,kBAAkBA,CAAA;IAEhB,OAAO,IAAI,CAACL,UAAU,CAACM,GAAG,CAAgB,GAAG,IAAI,CAACL,OAAO,EAAE,CAAC;EAC9D;EACAM,wBAAwBA,CAACC,IAAa;IAEpC,OAAO,IAAI,CAACR,UAAU,CAACM,GAAG,CAAgB,GAAG,IAAI,CAACL,OAAO,IAAIO,IAAI,EAAE,CAAC;EACtE;EACAC,mBAAmBA,CAACC,EAAW;IAE7B,OAAO,IAAI,CAACV,UAAU,CAACM,GAAG,CAAc,GAAG,IAAI,CAACL,OAAO,IAAIS,EAAE,EAAE,CAAC;EAClE;EACAC,iBAAiBA,CAACD,EAAW,EAAEP,WAAyB;IAEtD,OAAO,IAAI,CAACH,UAAU,CAACY,GAAG,CAAc,GAAG,IAAI,CAACX,OAAO,IAAIS,EAAE,EAAE,EAAEP,WAAW,CAAC;EAC/E;EACAU,iBAAiBA,CAACH,EAAW;IAE3B,OAAO,IAAI,CAACV,UAAU,CAACc,MAAM,CAAC,GAAG,IAAI,CAACb,OAAO,IAAIS,EAAE,EAAE,CAAC;EACxD;EACAK,gCAAgCA,CAACC,SAAgB,EAACR,IAAW;IAE3DS,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,OAAO,GAAG,eAAe,GAAGe,SAAS,GAAG,GAAG,GAAGR,IAAI,CAAC;IACpE,OAAO,IAAI,CAACR,UAAU,CAACM,GAAG,CAAgB,IAAI,CAACL,OAAO,GAAG,cAAc,GAAGe,SAAS,GAAG,GAAG,GAAGR,IAAI,CAAC;EACnG;EACAW,2BAA2BA,CAACC,SAAkB;IAE5C,OAAO,IAAI,CAACpB,UAAU,CAACM,GAAG,CAAgB,IAAI,CAACL,OAAO,GAAG,YAAY,GAAGmB,SAAS,CAAC;EACpF;;SAnCWtB,kBAAkB;;mBAAlBA,MAAkB,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAlB1B,MAAkB;EAAA2B,OAAA,EAAlB3B,MAAkB,CAAA4B,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}