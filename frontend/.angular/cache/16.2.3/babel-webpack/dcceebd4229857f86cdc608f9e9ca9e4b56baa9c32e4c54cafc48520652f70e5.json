{"ast":null,"code":"var _class;\nimport { Account } from '../model/account';\nimport * as i0 from \"@angular/core\";\nexport class CalendarService {\n  constructor() {\n    this.choosenDay = 0;\n    this.choosenTime = 0;\n    this.choosenMonth = 0;\n    this.choosenYear = 0;\n    this.choosenDate = '';\n    this.currentUser = new Account();\n    this.status = 'no';\n    this.disabledTime = [900, 1400];\n  }\n  ngOnInit() {\n    throw new Error('Method not implemented.');\n  }\n  setChooseDay(day) {\n    this.choosenDay = day;\n  }\n  getChooseDay() {\n    return this.choosenDay;\n  }\n  setChoosenTime(time) {\n    this.choosenTime = time;\n  }\n  getChoosenTime() {\n    return this.choosenTime;\n  }\n  setchoosenMonth(month) {\n    this.choosenMonth = month;\n  }\n  getChoosenMonth() {\n    return this.choosenMonth;\n  }\n  setchoosenYear(year) {\n    this.choosenYear = year;\n  }\n  getChoosenYear() {\n    return this.choosenYear;\n  }\n  isDisabledTime(time) {\n    return this.disabledTime.includes(time);\n  }\n  getCurrentUser() {\n    let tmp = window.sessionStorage.getItem('healthCenterUser');\n    if (tmp != null) {\n      this.currentUser = JSON.parse(tmp);\n    } else {\n      this.currentUser = new Account();\n    }\n    return this.currentUser;\n  }\n  getChoosenDate() {\n    this.choosenDate = this.choosenMonth.toString() + '/' + this.choosenDay.toString() + '/' + this.choosenYear.toString();\n    return this.choosenDate;\n  }\n  setStatus(status) {\n    this.status = status;\n  }\n  getStatus() {\n    return this.status;\n  }\n}\n_class = CalendarService;\n_class.ɵfac = function CalendarService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Account","CalendarService","constructor","choosenDay","choosenTime","choosenMonth","choosenYear","choosenDate","currentUser","status","disabledTime","ngOnInit","Error","setChooseDay","day","getChooseDay","setChoosenTime","time","getChoosenTime","setchoosenMonth","month","getChoosenMonth","setchoosenYear","year","getChoosenYear","isDisabledTime","includes","getCurrentUser","tmp","window","sessionStorage","getItem","JSON","parse","getChoosenDate","toString","setStatus","getStatus","factory","ɵfac","providedIn"],"sources":["/Users/namcuong757/eclipse-workspace/HeathCare1/Doctor-View-Frontend/frontend/src/app/service/calendar.service.ts"],"sourcesContent":["import { Injectable, OnInit } from '@angular/core';\nimport { Account } from '../model/account';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalendarService implements OnInit{\n  private choosenDay: number = 0;\n  private choosenTime : number = 0;\n  private choosenMonth: number = 0;\n  private choosenYear: number = 0;\n  private choosenDate: string = '';\n  private currentUser : Account = new Account;\n  private status : string = 'no';\n  disabledTime: number[] = [900,1400];\n  constructor() { }\n  ngOnInit(): void {\n    throw new Error('Method not implemented.');\n  }\n  setChooseDay(day: number) {\n    this.choosenDay = day;\n  }\n  getChooseDay() {\n    return this.choosenDay;\n  }\n  setChoosenTime(time : number)\n  {\n    this.choosenTime = time;\n  }\n  getChoosenTime()\n  {\n    return this.choosenTime\n  }\n  setchoosenMonth(month : number)\n  {\n    this.choosenMonth = month;\n  }\n  getChoosenMonth()\n  {\n    return this.choosenMonth;\n  }\n  setchoosenYear(year : number)\n  {\n    this.choosenYear = year;\n  }\n  getChoosenYear()\n  {\n    return this.choosenYear;\n  }\n  isDisabledTime(time : number)\n  {\n    return this.disabledTime.includes(time);\n  }\n  getCurrentUser()\n  {\n    let tmp = window.sessionStorage.getItem('healthCenterUser');\n    if(tmp != null)\n    {\n      this.currentUser = JSON.parse(tmp);\n    }\n    else\n    {\n      this.currentUser = new Account();\n    }\n    return this.currentUser;\n  }\n  getChoosenDate()\n  {\n    this.choosenDate = this.choosenMonth.toString() + '/' + this.choosenDay.toString() + '/' + this.choosenYear.toString();\n    return this.choosenDate;\n  }\n  setStatus(status : string)\n  {\n    this.status = status;\n  }\n  getStatus()\n  {\n    return this.status;\n  }\n}\n"],"mappings":";AACA,SAASA,OAAO,QAAQ,kBAAkB;;AAK1C,OAAM,MAAOC,eAAe;EAS1BC,YAAA;IARQ,KAAAC,UAAU,GAAW,CAAC;IACtB,KAAAC,WAAW,GAAY,CAAC;IACxB,KAAAC,YAAY,GAAW,CAAC;IACxB,KAAAC,WAAW,GAAW,CAAC;IACvB,KAAAC,WAAW,GAAW,EAAE;IACxB,KAAAC,WAAW,GAAa,IAAIR,OAAO,CAAP,CAAO;IACnC,KAAAS,MAAM,GAAY,IAAI;IAC9B,KAAAC,YAAY,GAAa,CAAC,GAAG,EAAC,IAAI,CAAC;EACnB;EAChBC,QAAQA,CAAA;IACN,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACAC,YAAYA,CAACC,GAAW;IACtB,IAAI,CAACX,UAAU,GAAGW,GAAG;EACvB;EACAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACZ,UAAU;EACxB;EACAa,cAAcA,CAACC,IAAa;IAE1B,IAAI,CAACb,WAAW,GAAGa,IAAI;EACzB;EACAC,cAAcA,CAAA;IAEZ,OAAO,IAAI,CAACd,WAAW;EACzB;EACAe,eAAeA,CAACC,KAAc;IAE5B,IAAI,CAACf,YAAY,GAAGe,KAAK;EAC3B;EACAC,eAAeA,CAAA;IAEb,OAAO,IAAI,CAAChB,YAAY;EAC1B;EACAiB,cAAcA,CAACC,IAAa;IAE1B,IAAI,CAACjB,WAAW,GAAGiB,IAAI;EACzB;EACAC,cAAcA,CAAA;IAEZ,OAAO,IAAI,CAAClB,WAAW;EACzB;EACAmB,cAAcA,CAACR,IAAa;IAE1B,OAAO,IAAI,CAACP,YAAY,CAACgB,QAAQ,CAACT,IAAI,CAAC;EACzC;EACAU,cAAcA,CAAA;IAEZ,IAAIC,GAAG,GAAGC,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,kBAAkB,CAAC;IAC3D,IAAGH,GAAG,IAAI,IAAI,EACd;MACE,IAAI,CAACpB,WAAW,GAAGwB,IAAI,CAACC,KAAK,CAACL,GAAG,CAAC;KACnC,MAED;MACE,IAAI,CAACpB,WAAW,GAAG,IAAIR,OAAO,EAAE;;IAElC,OAAO,IAAI,CAACQ,WAAW;EACzB;EACA0B,cAAcA,CAAA;IAEZ,IAAI,CAAC3B,WAAW,GAAG,IAAI,CAACF,YAAY,CAAC8B,QAAQ,EAAE,GAAG,GAAG,GAAG,IAAI,CAAChC,UAAU,CAACgC,QAAQ,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC7B,WAAW,CAAC6B,QAAQ,EAAE;IACtH,OAAO,IAAI,CAAC5B,WAAW;EACzB;EACA6B,SAASA,CAAC3B,MAAe;IAEvB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACtB;EACA4B,SAASA,CAAA;IAEP,OAAO,IAAI,CAAC5B,MAAM;EACpB;;SAxEWR,eAAe;;mBAAfA,MAAe;AAAA;;SAAfA,MAAe;EAAAqC,OAAA,EAAfrC,MAAe,CAAAsC,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}